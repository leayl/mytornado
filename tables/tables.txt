create table tb_user(
  user_id int primary key auto_increment,
  user_name varchar(64) not null unique,
  user_password varchar(64) not null,
  user_avatar varchar(256) default null,
  user_city varchar(64) not null,
  user_createdat datetime default current_timestamp,
  user_updatedat datetime default current_timestamp on update current_timestamp
)charset = utf8


create table tb_blog(
  blog_id int primary key auto_increment,
  blog_user_id int not null,
  blog_title varchar(128) not null,
  blog_content varchar(2048) not null,
  blog_createdat datetime default current_timestamp,
  blog_updatedat datetime default current_timestamp on update current_timestamp,
  foreign key(blog_user_id) references tb_user(user_id)
  on update cascade
  on delete cascade
)charset=utf8;


create table tb_tag(
  tag_id int primary key auto_increment,
  tag_content varchar(32) not null unique
)charset=utf8;


create table tb_blog_tag(
  rel_id int primary key auto_increment,
  rel_blog_id int not null,
  rel_tag_id int not null,
  foreign key(rel_blog_id) references tb_blog(blog_id)
  on update cascade
  on delete cascade,
  foreign key(rel_tag_id) references tb_tag(tag_id)
  on update cascade
  on delete cascade
)charset=utf8; 


create table tb_comment(
  comment_id int primary key auto_increment,
  comment_content varchar(512) not null,
  comment_blog_id int not null,
  comment_user_id int not null,
  comment_createdat datetime default current_timestamp,
  comment_updatedat datetime default current_timestamp on update current_timestamp,
  foreign key(comment_blog_id) references tb_blog(blog_id)
  on update cascade
  on delete cascade,
  foreign key(comment_user_id) references tb_user(user_id)
  on update cascade
  on delete cascade
)charset=utf8;